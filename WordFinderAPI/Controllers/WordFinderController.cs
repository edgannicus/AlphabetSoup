namespace WordFinderAPI.Controllers{        [ApiController]    [Route("api/[controller]")]    public class WordFinderController : ControllerBase    {        // POST: api/WordFinder/find-words        [HttpPost("find-words")]        public ActionResult<WordFinderResponse> FindWordsInMatrix([FromBody] WordFinderRequest request)        {            // Validate that a matrix is provided            if (request.Matrix.Count == 0)            {                return BadRequest("Matrix cannot be null or empty.");            }            // Validate that the matrix size does not exceed 64x64            if (request.Matrix.Count > WordFinderDefaults.MaxMatrixSize || request.Matrix.Any(row => row.Length > WordFinderDefaults.MaxMatrixSize))            {                return BadRequest($"Matrix size cannot exceed {WordFinderDefaults.MaxMatrixSize}x{WordFinderDefaults.MaxMatrixSize}.");            }            // Validate that the wordstream is provided            if (request.WordStream.Count == 0)            {                return BadRequest("WordStream cannot be null or empty.");            }            // Optionally, you could also limit the wordStream size if needed            if (request.WordStream.Count > 10) // Arbitrary limit, change as needed            {                return BadRequest("WordStream exceeds the maximum limit of 10 words.");            }                        try            {                // Create a WordFinder instance with the provided matrix                WordFinder finder = new WordFinder(request.Matrix);                // Execute the search using the wordstream provided                var wordsFound = finder.Find(request.WordStream);                // Return the list of found words                return Ok(wordsFound.ToList());            }            catch (ArgumentException ex)            {                return BadRequest(ex.Message); // Capture any errors            }        }    }}